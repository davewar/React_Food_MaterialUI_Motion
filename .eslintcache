[{"C:\\Users\\User\\Desktop\\WEB_BUILDS\\React_Food_Material_Motion\\src\\index.js":"1","C:\\Users\\User\\Desktop\\WEB_BUILDS\\React_Food_Material_Motion\\src\\App.js":"2","C:\\Users\\User\\Desktop\\WEB_BUILDS\\React_Food_Material_Motion\\src\\components\\Loading.js":"3","C:\\Users\\User\\Desktop\\WEB_BUILDS\\React_Food_Material_Motion\\src\\components\\Recipe.js":"4"},{"size":213,"mtime":1618158401447,"results":"5","hashOfConfig":"6"},{"size":7810,"mtime":1618220120969,"results":"7","hashOfConfig":"6"},{"size":321,"mtime":1618219930348,"results":"8","hashOfConfig":"6"},{"size":2638,"mtime":1619264312305,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"6dc2lf",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\WEB_BUILDS\\React_Food_Material_Motion\\src\\index.js",[],["20","21"],"C:\\Users\\User\\Desktop\\WEB_BUILDS\\React_Food_Material_Motion\\src\\App.js",["22"],"import React, {useState,useEffect} from 'react'\r\nimport Recipe from './components/Recipe'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Grid, AppBar, Toolbar, Button, Container,Typography, TextField, makeStyles, FormControl, FormLabel,RadioGroup, FormControlLabel,Radio} from '@material-ui/core'\r\nimport {format} from 'date-fns'\r\nimport Loading from './components/Loading'\r\nimport { motion } from 'framer-motion';\r\nrequire('dotenv').config()\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    field:{\r\n      marginTop:20,\r\n      marginBottom: 20,\r\n      display: 'block'\r\n    },\r\n    searchInput:{\r\n        display: 'flex',\r\n        flex: 1,\r\n    },\r\n    searchButton: {\r\n          marginTop: '20px',\r\n         marginBottom: '20px',\r\n    },\r\n    loading: {\r\n        display: 'flex',\r\n        color: 'black',\r\n        padding: '10px',\r\n      justifyContent: 'center',\r\n    },\r\n    error: {\r\n      display: 'flex',\r\n      padding: '10px',\r\n      justifyContent: 'center',\r\n      width: '50%',\r\n      margin: '0 auto',\r\n    },\r\n    App:{\r\n      minHeight:'100vh'\r\n    },\r\n      toolbar: {\r\n        flex: 1,\r\n    },\r\n    titleHeader:{\r\n      marginTop: '70px'\r\n    }\r\n\r\n\r\n})\r\n\r\nconst containerVariants = {\r\n  hidden: { \r\n    opacity: 0, \r\n  },\r\n  visible: { \r\n    opacity: 1, \r\n    transition: { delay: 0.5, duration: 1, ease: \"easeIn\" }\r\n  }\r\n\r\n};\r\n\r\n\r\nfunction App() {\r\n\r\n        const [recipes, setRecipes] = useState([])\r\n        const [search,setSearch]= useState(\"\")   // input box\r\n        const [query, setQuery] = useState('chicken')  // items to fetch\r\n        const [category, setCategory] = useState(\"chicken\")\r\n        const [showCategory, setShowCategory] = useState(false)  // show food Categorys -default items hidden\r\n        const [isLoading,setLoading] = useState(true)\r\n        const [error, setError] = useState({ show: false, msg: '' })\r\n\r\n        const classes = useStyles()  // css\r\n\r\nconst getRecipes = async () =>{\r\n        \r\n    try{\r\n\r\n      // \"https://api.edamam.com/search?q=chicken&app_id=${YOUR_APP_ID}&app_key=${YOUR_APP_KEY}&from=0&to=3&calories=591-722&health=alcohol-free\"\r\n      \r\n     \r\n      const resData  = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${process.env.REACT_APP_ID}&app_key=${process.env.REACT_APP_KEY}`)\r\n                \r\n     \r\n        if(!resData.ok){\r\n            console.log(\"here\");\r\n          throw Error (\"Issue with getting item. Please try again\")\r\n\r\n        }\r\n        \r\n        const data  = await resData.json()\r\n        \r\n\r\n        if(data.hits.length === 0){\r\n          throw Error (\"No items found\")\r\n            \r\n        }\r\n\r\n        // console.log(data.hits);\r\n        setRecipes(data.hits)\r\n        setLoading(false) // no longer awaiting data\r\n\r\n\r\n    }\r\n    catch (err) {\r\n\r\n      \r\n       setError({show: true, msg: err.message + \" , please try again\"}); // show error message\r\n       setLoading(false) // no data fetched\r\n       setRecipes(null)  /// show no items\r\n    }\r\n\r\n\r\n}  //end of getRecipes\r\n\r\n\r\nuseEffect(() => {      \r\n      getRecipes()\r\n}, [query,category])\r\n\r\n\r\n//update search value\r\nconst update = (e) => {  \r\n\r\n    setSearch(e.target.value)    \r\n    setError({ show: false, msg: '' }) // clear any prev error if there was one\r\n\r\n}\r\n\r\n//search for recipes\r\nconst handleSubmit = (e) => {\r\n\r\n      e.preventDefault()\r\n      setQuery(search)\r\n      setSearch('')\r\n\r\n}\r\n\r\n\r\n  return (\r\n   \r\n   <>\r\n        <AppBar\r\n          elevation={0}\r\n          className={classes.appbar}\r\n          >\r\n          <Toolbar>\r\n              <Typography className={classes.toolbar}>{format(new Date(),'do MMMM Y')}</Typography>\r\n              <Typography variant=\"h4\">Welcome</Typography>\r\n              \r\n          </Toolbar>\r\n      </AppBar>\r\n\r\n      <Container className={classes.App} onSubmit={handleSubmit}>\r\n      <motion.div\r\n        variants={containerVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n      \r\n      >\r\n            <Typography variant=\"h2\"\r\n            className={classes.titleHeader}\r\n            component=\"h2\"     \r\n            color=\"primary\"\r\n            align=\"center\"\r\n            gutterBottom\r\n            >\r\n            Search for your favourite foods\r\n            </Typography>\r\n      </motion.div>\r\n          <form className=\"search-form\" autoComplete=\"off\">\r\n\r\n             {!showCategory &&  <TextField className={classes.searchInput} type=\"text\" value={search}\r\n              onChange={update}              \r\n              color=\"primary\"\r\n              label=\"Ingredients\" \r\n              variant=\"outlined\" \r\n              />\r\n            }\r\n             <Button \r\n             endIcon={<SearchIcon />} color=\"secondary\" variant=\"contained\" className={classes.searchButton}\r\n             onClick={()=>{\r\n                setError({ show: false, msg: '' }) // clear any prev error if there was one\r\n                setShowCategory(!showCategory);\r\n                if(query === \"\"){\r\n                  setQuery(\"chicken\")\r\n                }\r\n              }} \r\n             >{!showCategory ? \"Food Catagorys\" : \"Back to Search\"}</Button> \r\n\r\n          {\r\n            showCategory &&\r\n           \r\n          <FormControl className={classes.field} > \r\n            <FormLabel>Food Categorys</FormLabel>\r\n                <RadioGroup value={category} onChange={(e)=>{\r\n                  setCategory(e.target.value); setQuery(e.target.value)}}> \r\n\r\n                    <FormControlLabel  value=\"chicken\" control={<Radio/>} label=\"Chicken Dishes\"/>\r\n                      <FormControlLabel  value=\"beef\" control={<Radio/>} label=\"Beef Dishes\"/>\r\n                          <FormControlLabel  value=\"lamb\" control={<Radio/>} label=\"Lamb Dishes\"/>\r\n                            <FormControlLabel  value=\"gammon\" control={<Radio/>} label=\"Gammon Dishes\"/>\r\n                      \r\n                  \r\n                </RadioGroup> \r\n          </FormControl>\r\n          }\r\n\r\n              {!showCategory ? \r\n              <Button endIcon={<SearchIcon />} color=\"primary\" variant=\"contained\" className={classes.searchButton} type=\"submit\">Search</Button> : null}\r\n\r\n          </form>\r\n\r\n            {\r\n              // isLoading && <div className={classes.loading}>Loading.......</div>\r\n              isLoading && <Loading />\r\n            }\r\n\r\n            {\r\n              error.show && <div className={classes.error}>{error.msg}</div>\r\n            }\r\n\r\n            {\r\n              recipes && \r\n                          <Grid  container \r\n                                direction=\"row\"\r\n                                justify=\"center\"\r\n                                alignItems=\"flex-start\"\r\n                                className=\"recipes\"\r\n                                spacing={3}\r\n                                >\r\n                              {\r\n                                \r\n                                  recipes.map(item =>{\r\n                                      return <Grid item key={item.recipe.label} xs={12} md={6}  lg={4}>                                      \r\n                                                  <Recipe \r\n                                                  key={item.recipe.label} \r\n                                                  title={item.recipe.label}\r\n                                                  calories={item.recipe.calories.toFixed(2)}\r\n                                                  image={item.recipe.image}\r\n                                                  ingredients={item.recipe.ingredients}\r\n                                                  />\r\n                                            </Grid>\r\n                                  })\r\n\r\n                              }\r\n                        </Grid>\r\n\r\n            }\r\n\r\n          \r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\User\\Desktop\\WEB_BUILDS\\React_Food_Material_Motion\\src\\components\\Loading.js",[],"C:\\Users\\User\\Desktop\\WEB_BUILDS\\React_Food_Material_Motion\\src\\components\\Recipe.js",["23","24"],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":119,"column":4,"nodeType":"31","endLine":119,"endColumn":20,"suggestions":"32"},{"ruleId":"33","severity":1,"message":"34","line":4,"column":125,"nodeType":"35","messageId":"36","endLine":4,"endColumn":131},{"ruleId":"33","severity":1,"message":"37","line":5,"column":10,"nodeType":"35","messageId":"36","endLine":5,"endColumn":24},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRecipes'. Either include it or remove the dependency array.","ArrayExpression",["40"],"no-unused-vars","'Hidden' is defined but never used.","Identifier","unusedVar","'MicNoneTwoTone' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"41","fix":"42"},"Update the dependencies array to be: [query, category, getRecipes]",{"range":"43","text":"44"},[3052,3068],"[query, category, getRecipes]"]